plugins {
    id "net.ltgt.apt" version "0.20"
    id "com.diffplug.gradle.spotless" version "3.23.0"
    id "com.google.protobuf" version "0.8.8"
    id "java"
    id "idea"
    id "com.google.cloud.tools.jib" version "1.0.0"

}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile(project(":proto"))
    compile(project(":core"))
    compile("com.google.protobuf:protobuf-java:3.6.1")
    compile("io.grpc:grpc-stub:1.17.1")
    compile("io.grpc:grpc-protobuf:1.17.1")
    runtime("io.grpc:grpc-netty-shaded:1.17.1")
    compile("io.grpc:grpc-services:1.17.1")
    compile("org.eclipse.jgit:org.eclipse.jgit:5.2.1.201812262042-r")
    compile 'net.sourceforge.argparse4j:argparse4j:0.8.1'

    compile("io.opencensus:opencensus-api:0.19.2")
    runtime("io.opencensus:opencensus-impl:0.19.2")
    runtime("io.opencensus:opencensus-contrib-grpc-metrics:0.19.2")
    runtime("io.opencensus:opencensus-exporter-trace-stackdriver:0.19.2")

    implementation('com.google.cloud:google-cloud-storage:1.63.0')

    testImplementation("junit:junit:4.12")
    testCompile 'com.github.stefanbirkner:system-rules:1.19.0'
    testCompile group: 'io.grpc', name: 'grpc-testing', version: '1.20.0'

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.6.1"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.15.1"
        }
    }
    
    generateProtoTasks {
        ofSourceSet('main').each {
            task ->
                task.plugins {
                    grpc {
                    }
                }

        }
        ofSourceSet("test")
    }
}

spotless {
    java {
        googleJavaFormat('1.7')
        target project.fileTree(project.projectDir) {
            include "**/*.java"
            exclude "build/**/*.java"
        }
    }
}

//jib {
//    from {
//        image = containerRepoBase + '/distroless/java-gcloud'
//    }
//    to {
//        image = containerRepoTarget + '/metaserver'
//    }
//    container {
//        mainClass = 'io.anemos.metastore.MetaStoreServer'
//        jvmFlags = ['-agentpath:/opt/cprof/profiler_java_agent.so=-cprof_service=metaserver',
//                    '-agentpath:/opt/cdbg/cdbg_java_agent.so',
//                    '-Dcom.google.cdbg.auth.serviceaccount.enable=true',
//                    '-Dcom.google.cdbg.module=metaserver',
//                    '-Dcom.google.cdbg.version=v2019.3.1.1250' ]
//        volumes = ['/var/run/secrets/google']
//    }
//}
jib {
    from {
        image = containerRepoBase + '/distroless/java-protoc'
    }
    to {
        image = containerRepoTarget + '/metastore'
    }
    container {
        mainClass = 'io.anemos.metastore.MetaStoreServer'
    }
}
